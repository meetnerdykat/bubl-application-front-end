{"ast":null,"code":"import _objectSpread from \"/Users/nerdykat/Projects/LAMBDA_SCHOOL/Front-End/bubl/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { LOGIN_START, LOGIN_SUCCESS, LOGIN_FAILURE, REGISTER_START, REGISTER_SUCCESS, REGISTER_FAILURE, FETCH_START, FETCH_SUCCESS, FETCH_FAILURE, FETCH_COMMENTS_START, FETCH_COMMENTS_SUCCESS, FETCH_COMMENTS_FAILURE, POST_START, POST_SUCCESS, POST_FAILURE, FETCH_SCHOOL_SUCCESS, FETCH_SCHOOL_START, FILTER_BUBLS } from '../actions';\nconst initialState = {\n  bubls: [],\n  comments: [],\n  filteredBubls: [],\n  schools: [],\n  \"student_id\": null,\n  \"school_id\": null,\n  \"bubl_id\": null,\n  \"thread_id\": null,\n  fetchingSchools: false,\n  fetchingBubls: false,\n  postingBubls: false,\n  loggingIn: false,\n  loginError: null,\n  registering: false,\n  registerError: null,\n  error: ''\n};\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case LOGIN_START:\n      {\n        return _objectSpread({}, state, {\n          loggingIn: true,\n          loginError: null,\n          student_id: null\n        });\n      }\n\n    case LOGIN_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          loggingIn: false,\n          student_id: action.payload\n        });\n      }\n\n    case LOGIN_FAILURE:\n      {\n        return _objectSpread({}, state, {\n          loggingIn: false,\n          loginError: \"failed login\"\n        });\n      }\n\n    case REGISTER_START:\n      {\n        return _objectSpread({}, state, {\n          registering: true,\n          registerError: null\n        });\n      }\n\n    case REGISTER_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          registering: false\n        });\n      }\n\n    case REGISTER_FAILURE:\n      {\n        return _objectSpread({}, state, {\n          registering: false,\n          registerError: \"failed sign up\"\n        });\n      }\n\n    case FETCH_START:\n      {\n        return _objectSpread({}, state, {\n          fetchingBubls: true\n        });\n      }\n\n    case FETCH_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          fetchingBubls: false,\n          bubls: action.payload,\n          filteredBubls: action.payload\n        });\n      }\n\n    case FETCH_FAILURE:\n      {\n        return _objectSpread({}, state, {\n          fetchingBubls: false,\n          error: action.payload\n        });\n      }\n\n    case FETCH_COMMENTS_START:\n      {\n        return _objectSpread({}, state, {\n          \"school_id\": null,\n          \"bubl_id\": null,\n          \"thread_id\": null\n        });\n      }\n\n    case FETCH_COMMENTS_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          \"school_id\": action.payload[0].school_id,\n          \"bubl_id\": action.payload[0].bubl_id,\n          \"thread_id\": action.payload[0].thread_id,\n          comments: action.payload\n        });\n      }\n\n    case FETCH_COMMENTS_FAILURE:\n      {\n        return _objectSpread({}, state, {\n          error: action.payload\n        });\n      }\n\n    case POST_START:\n      {\n        return _objectSpread({}, state, {\n          postingBubls: true\n        });\n      }\n\n    case POST_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          postingBubls: false,\n          bubls: action.payload\n        });\n      }\n\n    case POST_FAILURE:\n      {\n        return _objectSpread({}, state, {\n          postingBubls: false,\n          error: action.payload\n        });\n      }\n\n    case FETCH_SCHOOL_START:\n      return _objectSpread({}, state, {\n        fetchingSchools: true\n      });\n\n    case FETCH_SCHOOL_SUCCESS:\n      return _objectSpread({}, state, {\n        fetchingSchools: false,\n        schools: action.payload\n      });\n\n    case FILTER_BUBLS:\n      let filtered;\n\n      if (action.payload.hashtag === 'all') {\n        filtered = action.payload.allBubls;\n      } else {\n        filtered = action.payload.allBubls.filter(b => {\n          return b.hashtags.includes(action.payload.hashtag);\n        });\n      }\n\n      return _objectSpread({}, state, {\n        filteredBubls: filtered\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/nerdykat/Projects/LAMBDA_SCHOOL/Front-End/bubl/src/reducers/index.js"],"names":["LOGIN_START","LOGIN_SUCCESS","LOGIN_FAILURE","REGISTER_START","REGISTER_SUCCESS","REGISTER_FAILURE","FETCH_START","FETCH_SUCCESS","FETCH_FAILURE","FETCH_COMMENTS_START","FETCH_COMMENTS_SUCCESS","FETCH_COMMENTS_FAILURE","POST_START","POST_SUCCESS","POST_FAILURE","FETCH_SCHOOL_SUCCESS","FETCH_SCHOOL_START","FILTER_BUBLS","initialState","bubls","comments","filteredBubls","schools","fetchingSchools","fetchingBubls","postingBubls","loggingIn","loginError","registering","registerError","error","state","action","type","student_id","payload","school_id","bubl_id","thread_id","filtered","hashtag","allBubls","filter","b","hashtags","includes"],"mappings":"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","sourcesContent":["import {\n   LOGIN_START, LOGIN_SUCCESS, LOGIN_FAILURE,\n   REGISTER_START, REGISTER_SUCCESS, REGISTER_FAILURE,\n   FETCH_START, FETCH_SUCCESS, FETCH_FAILURE,\n   FETCH_COMMENTS_START, FETCH_COMMENTS_SUCCESS, FETCH_COMMENTS_FAILURE,\n   POST_START, POST_SUCCESS, POST_FAILURE, \n   FETCH_SCHOOL_SUCCESS, FETCH_SCHOOL_START, FILTER_BUBLS\n} from '../actions';\n\nconst initialState = {\n   bubls: [],\n   comments: [],\n   filteredBubls: [],\n   schools: [],\n   \"student_id\": null,\n   \"school_id\": null,\n  \"bubl_id\": null,\n  \"thread_id\": null,\n   fetchingSchools: false,\n   fetchingBubls: false,\n   postingBubls: false,\n   loggingIn: false,\n   loginError: null,\n   registering: false,\n   registerError: null,\n   error: ''\n}\n\nexport default (state = initialState, action) => {\n   switch (action.type) {\n      case LOGIN_START: {\n         return {\n            ...state,\n            loggingIn: true,\n            loginError: null,\n            student_id: null\n         }\n      }\n      case LOGIN_SUCCESS: {\n         return {\n            ...state,\n            loggingIn: false,\n            student_id: action.payload\n         }\n      }\n      case LOGIN_FAILURE: {\n         return {\n            ...state,\n            loggingIn: false,\n            loginError: \"failed login\"\n         }\n      }\n      case REGISTER_START: {\n         return {\n            ...state,\n            registering: true,\n            registerError: null,\n         }\n      }\n      case REGISTER_SUCCESS: {\n         return {\n            ...state,\n            registering: false\n         }\n      }\n      case REGISTER_FAILURE: {\n         return {\n            ...state,\n            registering: false,\n            registerError: \"failed sign up\"\n         }\n      }\n      case FETCH_START: {\n         return {\n            ...state,\n            fetchingBubls: true\n         }\n      }\n      case FETCH_SUCCESS: {\n         return {\n            ...state,\n            fetchingBubls: false,\n            bubls: action.payload,\n            filteredBubls: action.payload\n         }\n      }\n      case FETCH_FAILURE: {\n         return {\n            ...state,\n            fetchingBubls: false,\n            error: action.payload\n         }\n      }\n      case FETCH_COMMENTS_START: {\n         return {\n            ...state,\n            \"school_id\": null,\n            \"bubl_id\": null,\n            \"thread_id\": null,\n         }\n      }\n      case FETCH_COMMENTS_SUCCESS: {\n         return {\n            ...state,\n            \"school_id\": action.payload[0].school_id,\n            \"bubl_id\": action.payload[0].bubl_id,\n            \"thread_id\": action.payload[0].thread_id,\n            comments: action.payload\n         }\n      }\n      case FETCH_COMMENTS_FAILURE: {\n         return {\n            ...state,\n            error: action.payload\n         }\n      }\n      case POST_START: {\n         return {\n            ...state,\n            postingBubls: true\n         }\n      }\n      case POST_SUCCESS: {\n         return {\n            ...state,\n            postingBubls: false,\n            bubls: action.payload\n         }\n      }\n      case POST_FAILURE: {\n         return {\n            ...state,\n            postingBubls: false,\n            error: action.payload\n         }\n      }\n      case FETCH_SCHOOL_START:\n        return {\n          ...state,\n          fetchingSchools: true\n        };\n      case FETCH_SCHOOL_SUCCESS:\n      return {\n        ...state,        \n        fetchingSchools: false,\n        schools: action.payload\n      };\n      case FILTER_BUBLS:\n\n      let filtered;\n\n      if (action.payload.hashtag === 'all') {\n        filtered = action.payload.allBubls\n      } else {\n        filtered = action.payload.allBubls.filter(b => {\n          return b.hashtags.includes(action.payload.hashtag)\n        })      \n      }\n\n      return {\n        ...state,        \n        filteredBubls: filtered,\n      };\n      default: \n         return state;\n   }\n}"]},"metadata":{},"sourceType":"module"}